#!/usr/bin/env python
# encoding: utf-8
"""
Interface to list of stars and fields from CAS

This uses a mongodb database generated by the populate_cas_db.py script

History
-------
2011-06-13 - Created by Dan Foreman-Mackey

"""

__all__ = ['find_stars','find_observations','get_star','get_observation']

import numpy as np

import db

def _angular_distance(ra1,dec1,ra2,dec2):
    """
    Calculate the angular separation of 2 objects in RA/Dec space
    
    Parameters
    ----------
    ra1 : float
        In degrees
    
    dec1 : float
        In degrees
    
    ra2 : float
        In degrees
    
    dec2 : float
        In degrees
    
    Returns
    -------
    rho : float
        In degrees
    
    History
    -------
    2011-06-13 - Created by Dan Foreman-Mackey
    
    """
    ra1,dec1 = np.radians(ra1),np.radians(dec1)
    ra2,dec2 = np.radians(ra2),np.radians(dec2)
    crho = np.cos(dec1)*np.cos(dec2)\
            *(np.cos(ra1)*np.cos(ra2)+np.sin(ra1)*np.sin(ra2))\
            +np.sin(dec1)*np.sin(dec2)
    return np.degrees(np.arccos(crho))

def find_stars(ra,dec,radius=3.0):
    """
    Find bright stars within a specific annulus around (ra/dec)
    
    Parameters
    ----------
    ra : float
        In degrees

    dec : float
        In degrees

    Optional
    --------
    radius : float (default = 3.0)
        In arcmin
    
    Returns
    -------
    stars : list
        List of ObjectId objects
    
    TODO
    ----
    - Check that ra == 360 works properly

    History
    -------
    2011-06-13 - Created by Dan Foreman-Mackey
    
    """
    radius /= 60. # to degrees
    radius = np.radians(radius)
    while ra > 180.:
        ra -= 360.0

    res = db.stardb.find({'pos':{'$within':{'$centerSphere': [[ra,dec],radius]}}})
    stars = [star['_id'] for star in res]

    return stars

def find_observations(ra,dec):
    """
    Find all Stripe 82 fields that overlap with (RA/Dec)
    
    Parameters
    ----------
    ra : float
        In degrees

    dec : float
        In degrees
    
    Returns
    -------
    observations : list
        List of ObjectId objects
    
    History
    -------
    2011-06-13 - Created by Dan Foreman-Mackey
    
    """
    res = db.obsdb.find({'ramin': {'$lt': ra}, 'ramax': {'$gt': ra},
                        'decmin': {'$lt': dec}, 'decmax': {'$gt': dec}})
    observations = [obs['_id'] for obs in res]
    return observations

def get_star(objid):
    """
    Retrieve entry for star with given id
    
    Parameters
    ----------
    objid : bson.ObjectId
        The object ID
    
    Returns
    -------
    star : dict
        The star entry
    
    History
    -------
    2011-06-13 - Created by Dan Foreman-Mackey
    
    """
    return db.stardb.find_one({'_id': objid})

def get_observation(objid):
    """
    Retrieve entry for observation with given id
    
    Parameters
    ----------
    objid : bson.ObjectId
        The object ID
    
    Returns
    -------
    observation : dict
        The observation entry
    
    History
    -------
    2011-06-13 - Created by Dan Foreman-Mackey
    
    """
    return db.obsdb.find_one({'_id': objid})

